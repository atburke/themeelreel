{"version":3,"sources":["index.js"],"names":["LoginPage","props","state","username","password","location","setState","token","handleUsernameChange","bind","handlePasswordChange","handleSubmit","event","this","target","value","preventDefault","axios","method","url","auth","then","response","redirect","data","catch","error","statusText","to","pathname","errorMessage","onSubmit","htmlFor","type","id","onChange","React","Component","CreateAccountPage","password1","password2","handlePassword1Change","handlePassword2Change","smallError","smallErrorMessage","PriceListingAdminPage","priceListings","fetchListings","headers","status","listing","update","ingredientName","source","timeCreated","set","price","map","l","listings","key","min","step","setNewPrice","onClick","updateListing","deleteListing","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.0e0c2015.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport './index.css';\nimport axios from 'axios';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route path=\"/newaccount\">\n            <CreateAccountPage />\n          </Route>\n          <Route path=\"/\">\n          // temporary until we implement main page\n            <Redirect to=\"/login\" />\n          </Route>\n          <Route path=\"/listings\">\n            <Redirect to=\"/login\" />\n          </Route>\n          <Route path=\"/adminlistings\">\n            <PriceListingAdminPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: ''\n    };\n    if (this.props.location) {\n      this.setState({token: this.props.location.state.token});\n    }\n\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleUsernameChange(event) {\n    this.setState({username: event.target.value});\n  }\n\n  handlePasswordChange(event) {\n    this.setState({password: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    axios({\n      method: 'get',\n      url: '/api/login',\n      auth: {\n        username: this.state.username,\n        password: this.state.password\n      }\n    }).then(response => {\n      this.setState({redirect: '/', token: response.data.token});\n    }).catch(error => {\n      this.setState({error: error.statusText});\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={{\n        pathname: this.state.redirect,\n        state: {token: this.state.token}\n      }} />;\n    }\n\n    let errorMessage = this.state.error ? <p>{this.state.error}</p> : <p></p>;\n    return (\n      <div>\n      <p>Don't have an account? <Link to=\"/newaccount\">Sign up</Link></p>\n      {errorMessage}\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"username\">Username</label>\n          <input type=\"text\" id=\"username\" value={this.state.username} onChange={this.handleUsernameChange} />\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" value={this.state.password} onChange={this.handlePasswordChange} />\n          <input type=\"submit\" value=\"Log in\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nclass CreateAccountPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password1: '',\n      password2: ''\n    };\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePassword1Change = this.handlePassword1Change.bind(this);\n    this.handlePassword2Change = this.handlePassword2Change.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleUsernameChange(event) {\n    this.setState({username: event.target.value});\n  }\n\n  handlePassword1Change(event) {\n    this.setState({password1: event.target.value});\n  }\n\n  handlePassword2Change(event) {\n    this.setState({password2: event.target.value});\n    if (this.state.password1 !== this.state.password2) {\n      this.setState({smallError: 'Passwords must match'});\n    } else {\n      this.setState({smallError: ''});\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (!this.state.username) {\n      this.setState({smallError: 'No username provided'});\n      return;\n    }\n\n    if (this.state.password1 !== this.state.password2) {\n      this.setState({smallError: 'Passwords must match'});\n      return;\n    }\n\n    if (!this.state.password1) {\n      this.setState({smallError: 'No password provided'});\n      return;\n    }\n\n    axios({\n      method: 'post',\n      url: '/api/createaccount',\n      data: {\n        username: this.state.username,\n        password: this.state.password\n      }\n    }).then(response => {\n      this.setState({redirect: '/', token: response.data.token});\n    }).catch(error => {\n      this.setState({error: error.statusText});\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={{\n        pathname: this.state.redirect,\n        state: {token: this.state.token}\n      }} />;\n    }\n\n    let errorMessage = this.state.error ? <p>{this.state.error}</p> : <p></p>;\n    let smallErrorMessage = this.state.smallError ? <p>{this.state.smallError}</p> : <p></p>;\n    return (\n      <div>\n      <p>Already have an account? <Link to=\"/login\">Log in</Link></p>\n      {errorMessage}\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"username\">Username</label>\n          <input type=\"text\" id=\"username\" value={this.state.username} onChange={this.handleUsernameChange} />\n          <label htmlFor=\"password1\">Password</label>\n          <input type=\"password\" id=\"password1\" value={this.state.password1} onChange={this.handlePassword1Change} />\n          <label htmlFor=\"password2\">Retype Password</label>\n          <input type=\"password\" id=\"password2\" value={this.state.password2} onChange={this.handlePassword2Change} />\n          <input type=\"submit\" value=\"Create account\" />\n        </form>\n      {smallErrorMessage}\n      </div>\n    );\n  }\n}\n\n/*\nclass PlanMealPage extends React.Component {\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={{\n        pathname: this.state.redirect,\n        state: {token: this.state.token}\n      }} />\n    }\n  }\n}\n*/\n\n/*\nclass PriceListingPage extends React.Component {\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n  }\n}\n*/\n\nclass PriceListingAdminPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      priceListings: [],\n      token: ''\n    };\n\n    if (this.props.location) {\n      this.setState({token: this.props.location.state.token});\n    }\n\n    this.fetchListings();\n  }\n\n  fetchListings() {\n    axios({\n      method: 'get',\n      url: '/api/adminpricelistings',\n      headers: {\n        'Authorization': `Bearer ${this.state.token}`\n      }\n    }).then(response => {\n      this.setState({priceListings: response.data.priceListings});\n    }).catch(error => {\n      if (error.status === 401) {\n        this.setState({redirect: '/login'});\n      } else if (error.status === 403) {\n        // TODO: response for forbidden\n      } else {\n        this.setState({error: error.data.error});\n      }\n    });\n  }\n\n  updateListing(listing) {\n    axios({\n      method: 'post',\n      url: '/api/adminpricelistings/update',\n      headers: {\n        'Authorization': `Bearer ${this.state.token}`\n      },\n      data: {\n        update: {\n          ingredientName: listing.ingredientName,\n          source: listing.source,\n          timeCreated: listing.timeCreated\n        },\n        set: {\n          price: listing.price\n        }\n      }\n    }).then(response => {\n      this.fetchListings();\n\n    }).catch(error => {\n      if (error.status === 401) {\n        this.setState({redirect: '/login'});\n      } else if (error.status === 403) {\n        // TODO: forbidden response\n      } else {\n        this.setState({error: error.data.error});\n      }\n    });\n  }\n\n  deleteListing(listing) {\n    axios({\n      method: 'post',   // we could use delete, but eh\n      url: '/api/adminpricelistings/delete',\n      headers: {\n        'Authorization': `Bearer ${this.state.token}`\n      },\n      data: {\n        ingredientName: listing.ingredientName,\n        source: listing.source,\n        timeCreated: listing.timeCreated\n      }\n    }).then(response => {\n      this.fetchListings();\n\n    }).catch(error => {\n      if (error.status === 401) {\n        this.setState({redirect: '/login'});\n      } else if (error.status === 403) {\n        // TODO: forbidden response\n      } else {\n        this.setState({error: error.data.error});\n      }\n    });\n  }\n\n  setNewPrice(listing, price) {\n    this.setState({priceListings: this.state.priceListings.map(l => {\n      if (l.ingredientName === listing.ingredientName &&\n        l.source === listing.source &&\n        l.timeCreated === listing.timeCreated) {\n        return {\n          ingredientName: l.ingredientName,\n          source: l.source,\n          timeCreated: l.timeCreated,\n          price: price\n        };\n      }\n\n      return l;\n    })});\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={{\n        pathname: this.state.redirect,\n        state: {token: this.state.token}\n      }} />;\n    }\n\n    // TODO: paginate\n    const listings = this.state.priceListings.map(listing =>\n      <tr key={`${listing.ingredientName}:${listing.source}:${listing.timeCreated}`}>\n        <td>{listing.ingredientName}</td>\n        <td>$<input type=\"number\" min=\"0\" step=\"0.01\" value={listing.price} onChange={() => this.setNewPrice(listing, listing.price)} /></td>\n        <td>{listing.source}</td>\n        <td>{listing.timeCreated}</td>\n        <td><button onClick={() => this.updateListing(listing)}>Update</button></td>\n        <td><button onClick={() => this.deleteListing(listing)}>X</button></td>\n      </tr>\n    );\n\n    return (\n      <div>\n        <table>\n          {listings}\n        </table>\n        <p>{this.state.error}</p>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(App(), document.getElementById(\"root\"));\n"],"sourceRoot":""}