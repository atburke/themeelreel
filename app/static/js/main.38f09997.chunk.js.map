{"version":3,"sources":["index.js"],"names":["AppHeader","to","pathname","state","token","this","props","React","Component","LoginPage","username","password","location","setState","handleUsernameChange","bind","handlePasswordChange","handleSubmit","event","target","value","preventDefault","axios","method","url","auth","then","response","redirect","data","catch","error","statusText","errorMessage","onSubmit","htmlFor","type","id","onChange","CreateAccountPage","password1","password2","handlePassword1Change","handlePassword2Change","smallError","smallErrorMessage","PlanMealPage","PriceListingPage","ingredientSuggestions","unitSuggestions","ingredientSearchTerm","unitSearchTerm","newIngredientName","newIngredientSource","newIngredientPrice","newIngredientUnits","searchIngredient","searchUnit","fetchNeededPriceListing","setPrice","selectUnits","selectIngredient","selectSource","addPriceListing","e","searchTerm","headers","params","kw","results","status","ingredientName","units","newListing","price","source","forEach","field","message","ingredientOptions","unitOptions","form","map","name","onClick","unit","min","step","PriceListingAdminPage","priceListings","fetchListings","listing","update","timeCreated","set","l","listings","key","updateListingLocally","updateListing","deleteListing","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.38f09997.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport './index.css';\nimport axios from 'axios';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route path=\"/newaccount\">\n            <CreateAccountPage />\n          </Route>\n          <Route path=\"/\">\n            <PlanMealPage />\n          </Route>\n          <Route path=\"/listings\">\n            <PriceListingPage />\n          </Route>\n          <Route path=\"/adminlistings\">\n            <PriceListingAdminPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nclass AppHeader extends React.Component {\n  render() {\n    return (\n      <nav>\n        <ul>\n          <li><Link to={{\n            pathname: '/',\n            state: {token: this.props.token}\n          }}>Meal Planner</Link></li>\n          <li><Link to={{\n            pathname: '/listings',\n            state: {token: this.props.token}\n          }}>Price Listings</Link></li>\n        </ul>\n      </nav>\n    )\n  }\n}\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: ''\n    };\n    if (this.props.location) {\n      this.setState({token: this.props.location.state.token});\n    }\n\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleUsernameChange(event) {\n    this.setState({username: event.target.value});\n  }\n\n  handlePasswordChange(event) {\n    this.setState({password: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    axios({\n      method: 'get',\n      url: '/api/login',\n      auth: {\n        username: this.state.username,\n        password: this.state.password\n      }\n    }).then(response => {\n      this.setState({redirect: '/', token: response.data.token});\n    }).catch(error => {\n      this.setState({error: error.statusText});\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={{\n        pathname: this.state.redirect,\n        state: {token: this.state.token}\n      }} />;\n    }\n\n    let errorMessage = this.state.error ? <p>{this.state.error}</p> : <p></p>;\n    return (\n      <div>\n      <p>Don't have an account? <Link to=\"/newaccount\">Sign up</Link></p>\n      {errorMessage}\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"username\">Username</label>\n          <input type=\"text\" id=\"username\" value={this.state.username} onChange={this.handleUsernameChange} />\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" value={this.state.password} onChange={this.handlePasswordChange} />\n          <input type=\"submit\" value=\"Log in\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nclass CreateAccountPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password1: '',\n      password2: ''\n    };\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePassword1Change = this.handlePassword1Change.bind(this);\n    this.handlePassword2Change = this.handlePassword2Change.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleUsernameChange(event) {\n    this.setState({username: event.target.value});\n  }\n\n  handlePassword1Change(event) {\n    this.setState({password1: event.target.value});\n  }\n\n  handlePassword2Change(event) {\n    this.setState({password2: event.target.value});\n    if (this.state.password1 !== this.state.password2) {\n      this.setState({smallError: 'Passwords must match'});\n    } else {\n      this.setState({smallError: ''});\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (!this.state.username) {\n      this.setState({smallError: 'No username provided'});\n      return;\n    }\n\n    if (this.state.password1 !== this.state.password2) {\n      this.setState({smallError: 'Passwords must match'});\n      return;\n    }\n\n    if (!this.state.password1) {\n      this.setState({smallError: 'No password provided'});\n      return;\n    }\n\n    axios({\n      method: 'post',\n      url: '/api/createaccount',\n      data: {\n        username: this.state.username,\n        password: this.state.password\n      }\n    }).then(response => {\n      this.setState({redirect: '/', token: response.data.token});\n    }).catch(error => {\n      this.setState({error: error.statusText});\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={{\n        pathname: this.state.redirect,\n        state: {token: this.state.token}\n      }} />;\n    }\n\n    let errorMessage = this.state.error ? <p>{this.state.error}</p> : <p></p>;\n    let smallErrorMessage = this.state.smallError ? <p>{this.state.smallError}</p> : <p></p>;\n    return (\n      <div>\n      <p>Already have an account? <Link to=\"/login\">Log in</Link></p>\n      {errorMessage}\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"username\">Username</label>\n          <input type=\"text\" id=\"username\" value={this.state.username} onChange={this.handleUsernameChange} />\n          <label htmlFor=\"password1\">Password</label>\n          <input type=\"password\" id=\"password1\" value={this.state.password1} onChange={this.handlePassword1Change} />\n          <label htmlFor=\"password2\">Retype Password</label>\n          <input type=\"password\" id=\"password2\" value={this.state.password2} onChange={this.handlePassword2Change} />\n          <input type=\"submit\" value=\"Create account\" />\n        </form>\n      {smallErrorMessage}\n      </div>\n    );\n  }\n}\n\nclass PlanMealPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: ''\n    };\n  }\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={{\n        pathname: this.state.redirect,\n        state: {token: this.state.token}\n      }} />;\n    }\n\n    return (\n      <div>\n        <AppHeader token={this.state.token} />\n        <p>NOTHING TO SEE HERE</p>\n      </div>\n    );\n  }\n}\n\nclass PriceListingPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredientSuggestions: [],\n      unitSuggestions: [],\n      token: '',\n      ingredientSearchTerm: '',\n      unitSearchTerm: '',\n      newIngredientName: '',\n      newIngredientSource: '',\n      newIngredientPrice: 0,\n      newIngredientUnits: ''\n    };\n    this.searchIngredient = this.searchIngredient.bind(this);\n    this.searchUnit = this.searchUnit.bind(this);\n    this.fetchNeededPriceListing = this.fetchNeededPriceListing.bind(this);\n    this.setPrice = this.setPrice.bind(this);\n    this.selectUnits = this.selectUnits.bind(this);\n    this.selectIngredient = this.selectIngredient.bind(this);\n    this.selectSource = this.selectSource.bind(this);\n    this.addPriceListing = this.addPriceListing.bind(this);\n  }\n\n  searchIngredient(e) {\n    let searchTerm = e.target.value;\n    this.setState({ingredientSearchTerm: searchTerm});\n    if (!searchTerm) {\n      this.setState({ingredientSuggestions: []});\n      return;\n    }\n\n    axios({\n      method: 'get',\n      url: '/api/search/ingredient',\n      headers: {\n        'Authorization': `Bearer ${this.state.token}`\n      },\n      params: {\n        kw: searchTerm\n      }\n    }).then(response => {\n      this.setState({ingredientSuggestions: response.data.results});\n    }).catch(error => {\n      if (error.status === 401) {\n        this.setState({redirect: '/login'});\n      } else {\n        this.setState({error: error.data.error});\n      }\n    });\n  }\n\n  searchUnit(e) {\n    let searchTerm = e.target.value;\n    this.setState({unitSearchTerm: searchTerm});\n    if (!searchTerm) {\n      this.setState({unitSuggestions: []});\n      return;\n    }\n\n    axios({\n      method: 'get',\n      url: '/api/search/unit',\n      headers: {\n        'Authorization': `Bearer ${this.state.token}`\n      },\n      params: {\n        kw: searchTerm\n      }\n    }).then(response => {\n      this.setState({unitSuggestions: response.data.results});\n    }).catch(error => {\n      if (error.status === 401) {\n        this.setState({redirect: '/login'});\n      } else {\n        this.setState({error: error.data.error});\n      }\n    });\n  }\n\n  fetchNeededPriceListing() {\n    axios({\n      method: 'get',\n      url: '/api/pricelistings',\n      headers: {\n        'Authorization': `Bearer ${this.state.token}`\n      }\n    }).then(response => {\n      this.setState({\n        newIngredientName: response.data.ingredientName,\n        ingredientSuggestions: []\n      });\n    }).catch(error => {\n      if (error.status === 401) {\n        this.setState({redirect: '/login'});\n      } else {\n        this.setState({error: error.data.error});\n      }\n    });\n  }\n\n  selectIngredient(ingredientName) {\n    this.setState({newIngredientName: ingredientName, ingredientSuggestions: []});\n  }\n\n  selectUnits(units) {\n    this.setState({newIngredientUnits: units, unitSuggestions: []});\n  }\n\n  selectSource(e) {\n    this.setState({newIngredientSource: e.target.value});\n  }\n\n  setPrice(e) {\n    this.setState({newIngredientPrice: e.target.value});\n  }\n\n  addPriceListing(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    let newListing = {\n      ingredientName: this.state.newIngredientName,\n      price: this.state.newIngredientPrice,\n      source: this.state.newIngredientSource,\n      units: this.state.newIngredientUnits\n    };\n\n    ['ingredientName', 'source', 'units'].forEach(field => {\n      if (!newListing[field]) {\n        this.setState({error: `Missing field: ${field}`});\n        return;\n      }\n    });\n\n    if (newListing.price < 0) {\n      this.setState({error: 'Price cannot be negative'});\n      return;\n    }\n\n    axios({\n      method: 'post',\n      url: '/api/pricelistings',\n      headers: {\n        'Authorization': `Bearer ${this.state.token}`\n      },\n      data: newListing\n    }).then(response => {\n      this.setState({\n        error: '',\n        message: `Price for ${newListing.ingredientName} successfully added!`\n      });\n    }).catch(error => {\n      if (error.status === 401) {\n        this.setState({redirect: '/login'});\n      } else {\n        this.setState({error: error.data.error});\n      }\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={{\n        pathname: this.state.redirect,\n        state: {token: this.state.token}\n      }} />;\n    }\n\n    let ingredientOptions;\n    if (this.state.ingredientOptions) {\n      ingredientOptions = (\n        <ul>\n          {this.ingredientSuggestions.map(name => (\n            <li><button onClick={() => this.selectIngredient(name)}>{name}</button></li>\n          ))}\n        </ul>\n      );\n    } else {\n      this.ingredientOptions = <div></div>;\n    }\n\n    let unitOptions;\n    if (this.state.unitOptions) {\n      unitOptions = (\n        <ul>\n        {this.unitSuggestions.map(unit => (\n          <li><button onClick={() => this.selectUnits(unit)}>{unit}</button></li>\n        ))}\n        </ul>\n      );\n    } else {\n      unitOptions = <div></div>;\n    }\n\n    let form;\n    if (this.state.newIngredientName) {\n      form = (\n          <div>\n          <form onSubmit={this.addPriceListing}>\n            <p>{this.state.newIngredientName}</p>\n            <input type=\"text\" value={this.state.newIngredientSource} onChange={this.selectSource} />\n            <input type=\"number\" min=\"0\" step=\"0.01\" value={this.state.newIngredientPrice} onChange={this.setPrice}/>\n            <p>{this.state.newIngredientUnits}</p>\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      );\n    } else {\n      form = <div></div>;\n    }\n\n    return (\n      <div>\n      <AppHeader token={this.state.token} />\n        <label htmlFor=\"searchIngredient\">Search for an ingredient to add a price listing for:</label>\n        <input id=\"searchIngredient\" value={this.ingredientSearchTerm} onChange={this.searchIngredient}/>\n        {ingredientOptions}\n        <button onClick={this.fetchNeededPriceListing}>Choose for me</button>\n        <label htmlFor=\"searchUnit\">Select Units</label>\n        <input id=\"searchUnit\" value={this.unitSearchTerm} onChange={this.searchUnit} />\n        {unitOptions}\n        <hr />\n        {form}\n        {this.state.error}\n      </div>\n    );\n  }\n}\n\nclass PriceListingAdminPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      priceListings: [],\n      token: ''\n    };\n\n    if (this.props.location) {\n      this.setState({token: this.props.location.state.token});\n    }\n\n    this.fetchListings();\n  }\n\n  fetchListings() {\n    axios({\n      method: 'get',\n      url: '/api/adminpricelistings',\n      headers: {\n        'Authorization': `Bearer ${this.state.token}`\n      }\n    }).then(response => {\n      this.setState({priceListings: response.data.priceListings});\n    }).catch(error => {\n      if (error.status === 401) {\n        this.setState({redirect: '/login'});\n      } else if (error.status === 403) {\n        // TODO: response for forbidden\n      } else {\n        this.setState({error: error.data.error});\n      }\n    });\n  }\n\n  updateListing(listing) {\n    axios({\n      method: 'post',\n      url: '/api/adminpricelistings/update',\n      headers: {\n        'Authorization': `Bearer ${this.state.token}`\n      },\n      data: {\n        update: {\n          ingredientName: listing.ingredientName,\n          source: listing.source,\n          timeCreated: listing.timeCreated\n        },\n        set: {\n          price: listing.price\n        }\n      }\n    }).then(response => {\n      this.fetchListings();\n\n    }).catch(error => {\n      if (error.status === 401) {\n        this.setState({redirect: '/login'});\n      } else if (error.status === 403) {\n        // TODO: forbidden response\n      } else {\n        this.setState({error: error.data.error});\n      }\n    });\n  }\n\n  deleteListing(listing) {\n    axios({\n      method: 'post',   // we could use delete, but eh\n      url: '/api/adminpricelistings/delete',\n      headers: {\n        'Authorization': `Bearer ${this.state.token}`\n      },\n      data: {\n        ingredientName: listing.ingredientName,\n        source: listing.source,\n        timeCreated: listing.timeCreated\n      }\n    }).then(response => {\n      this.fetchListings();\n\n    }).catch(error => {\n      if (error.status === 401) {\n        this.setState({redirect: '/login'});\n      } else if (error.status === 403) {\n        // TODO: forbidden response\n      } else {\n        this.setState({error: error.data.error});\n      }\n    });\n  }\n\n  updateListingLocally(listing) {\n    this.setState({priceListings: this.state.priceListings.map(l => {\n      if (l.ingredientName === listing.ingredientName &&\n        l.source === listing.source &&\n        l.timeCreated === listing.timeCreated) {\n        return {\n          ingredientName: l.ingredientName,\n          source: l.source,\n          timeCreated: l.timeCreated,\n          price: listing.price,\n          units: listing.units\n        };\n      }\n\n      return l;\n    })});\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={{\n        pathname: this.state.redirect,\n        state: {token: this.state.token}\n      }} />;\n    }\n\n    // TODO: paginate\n    const listings = this.state.priceListings.map(listing =>\n      <tr key={`${listing.ingredientName}:${listing.source}:${listing.timeCreated}`}>\n        <td>{listing.ingredientName}</td>\n        <td>$<input type=\"number\" min=\"0\" step=\"0.01\" value={listing.price} onChange={() => this.updateListingLocally(listing)} /></td>\n        <td><input type=\"text\" value={listing.units} onChange={() => this.updateListingLocally(listing)} /></td>\n        <td>{listing.source}</td>\n        <td>{listing.timeCreated}</td>\n        <td><button onClick={() => this.updateListing(listing)}>Update</button></td>\n        <td><button onClick={() => this.deleteListing(listing)}>X</button></td>\n      </tr>\n    );\n\n    return (\n      <div>\n      <AppHeader token={this.state.token} />\n        <table>\n          {listings}\n        </table>\n        <p>{this.state.error}</p>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(App(), document.getElementById(\"root\"));\n"],"sourceRoot":""}